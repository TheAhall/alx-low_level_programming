!<arch>
0-isupper.c/    0           0     0     644     240       `
#include "main.h"

/**
 * _isupper - function for upper/lowercase
 * @c: should be seen if upper or lowercase
 * Return: value of i=1 or 0
 */
int _isupper(int c)
{
	int i;

	if (c >= 'A' && c <= 'Z')
		i = 1;
	else
		i = 0;
	return (i);
}
0-memset.c/     0           0     0     644     282       `
#include "main.h"

/**
 * _memset - function that fills memory with a constant byte
 * @s: the arrayr
 * @b: variable char
 * @n: array s size
 * Return: char
 */
char *_memset(char *s, char b, unsigned int n)
{
	unsigned int i;

	for (i = 0; i < n; i++)
		s[i] = b;
	return (s);
}
0-strcat.c/     0           0     0     644     233       `
#include "main.h"
#include <string.h>

/**
 * _strcat - function that concatenates tow strings
 * @dest: variable 1
 * @src: variable 2
 * Return: void
 */
char *_strcat(char *dest, char *src)
{
	strcat(dest, src);
	return (dest);
}

100-atoi.c/     0           0     0     644     406       `
#include "main.h"

/**
 * _atoi - Function to convert a string to an interger
 * @s: variable should be converted
 * Return: void
 */
int _atoi(char *s)
{
	int i = 1, j = 0, c = 0;
	unsigned int ni = 0;

	while (s[c])
	{
		if (s[c] == 45)
			i *= -1;
		while (s[c] >= 48 && s[c] <= 57)
		{
			j = 1;
			ni = (ni * 10) + (s[c] - '0');
			c++;
		}
		if (j == 1)
			break;
		c++;
	}
	ni *= i;
	return (ni);
}
1-isdigit.c/    0           0     0     644     211       `
#include "main.h"
#include <ctype.h>

/**
 * _isdigit - function for digit
 * @c: should ne checked
 * Return: variable
 */
int _isdigit(int c)
{
	int i;

	if (isdigit(c))
		i = 1;
	else
		i = 0;
	return (i);
}

1-memcpy.c/     0           0     0     644     272       `
#include "main.h"

/**
 * _memcpy - function that copies memory area
 * @dest: var 1
 * @src: var 2
 * @n: the size
 * Return: char
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
	unsigned int i;

	for (i = 0; i < n; i++)
		dest[i] = src[i];
	return (dest);
}
1-strncat.c/    0           0     0     644     261       `
#include "main.h"
#include <string.h>

/**
 * _strncat - Function that concatenates two strings
 * @dest: variable 1
 * @src: variable 2
 * @n: variable 3
 * Return: 0
 */
char *_strncat(char *dest, char *src, int n)
{
	strncat(dest, src, n);
	return (dest);
}

2-strchr.c/     0           0     0     644     271       `
#include "main.h"

/**
 * _strchr - function that locates a character in a string
 * @s: var 1
 * @c: var 2
 * Return: value
 */
char *_strchr(char *s, char c)
{
	while (*s != '\0')
	{
		if (*s == c)
			return (s);
		s++;
	}
	if (*s == c)
		return (s);
	return (NULL);
}

2-strlen.c/     0           0     0     644     202       `
#include "main.h"
#include <string.h>

/**
 * _strlen - function for showing the length
 * @s: variable to know its length
 * Return: 0
 */
int _strlen(char *s)
{
	size_t i = strlen(s);

	return (i);
}
2-strncpy.c/    0           0     0     644     251       `
#include "main.h"
#include <string.h>
/**
 * _strncpy - function that copies a string
 * @dest: variable 1
 * @src: variable 2
 * @n: variable 3
 * Return: 0
 */
char *_strncpy(char *dest, char *src, int n)
{
	strncpy(dest, src, n);
	return (dest);
}

3-islower.c/    0           0     0     644     193       `
#include "main.h"

/**
 * _islower - Entery point
 *@c: Should be checked
 * Return: 1 or 0
 */
int _islower(int c)
{
	int i;

	if (c >= 'a' && c <= 'z')
		i = 1;
	else
		i = 0;
	return (i);
}

3-puts.c/       0           0     0     644     153       `
#include "main.h"

/**
 * _puts - Function to print a string
 * @str: sting should be printed
 * Return: value
 */
void _puts(char *str)
{
	puts(str);
}

3-strcmp.c/     0           0     0     644     259       `
#include "main.h"
#include <string.h>

/**
 * _strcmp - function that compares two strings
 * @s1: string 1 should be comared
 * @s2: string 2 should be compared
 * Return: 0:
 */
int _strcmp(char *s1, char *s2)
{
	int i;

	i = strcmp(s1, s2);
	return (i);
}

3-strspn.c/     0           0     0     644     339       `
#include "main.h"

/**
 * _strspn - function that gets the length of a prefix substring
 * @s: var 1
 * @accept: var 2
 * Return: value
 */
unsigned int _strspn(char *s, char *accept)
{
	int i, j;

	for (i = 0; s[i] != '\0'; i++)
	{
		for (j = 0; s[i] != accept[j]; j++)
		{
			if (accept[j] == '\0')
				return (i);
		}
	}
	return (0);
}

4-isalpha.c/    0           0     0     644     245       `
#include "main.h"

/**
 * _isalpha - Entery point
 *@c: Should be checked
 * Return: 1 or 0
 */
int _isalpha(int c)
{
	int i;

	if (c >= 'a' && c <= 'z')
		i = 1;
	else
	{
		if (c >= 'A' && c <= 'Z')
			i = 1;
		else
			i = 0;
	}
	return (i);
}

4-strpbrk.c/    0           0     0     644     339       `
#include "main.h"

/**
 * _strpbrk - function that searches a string for any of a set of bytes
 * @s: var 1
 * @accept: var 2
 * Return: s or NULL
 */
char *_strpbrk(char *s, char *accept)
{
	while (*s != '\0')
	{
		const char *a = accept;

		while (*a != '\0')
		{
			if (*s == *a)
				return (s);
			a++;
		}
		s++;
	}
	return (NULL);
}

5-strstr.c/     0           0     0     644     252       `
#include "main.h"
#include <string.h>

/**
 * _strstr - function that locates a substring.
 * @haystack: var 1
 * @needle: var 2
 * Return: char
 */
char *_strstr(char *haystack, char *needle)
{
	char *a;

	a = strstr(haystack, needle);
	return (a);
}
6-abs.c/        0           0     0     644     164       `
#include "main.h"
#include <stdlib.h>

/**
 * _abs - Starter point
 * @n: should be turned to abs value
 * Return: number
 */
int _abs(int n)
{
	return (abs(n));
}
9-strcpy.c/     0           0     0     644     290       `
#include "main.h"
#include <string.h>

/**
 * _strcpy - Funcion copies a string to other
 * @dest: variable
 * @src: variable
 * Return: void
 */
char *_strcpy(char *dest, char *src)
{
	int i = 0;

	while (src[i] != '\0')
	{
		dest[i] = src[i];
		i++;
	}
	dest[i] = '\0';
	return (dest);
}
main.c/         0           0     0     644     142       `
#include "main.h"

int main(void)
{
	_puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
	return (0);
}
_putchar.c/     0           0     0     644     248       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
		return (write(1, &c, 1));
}
